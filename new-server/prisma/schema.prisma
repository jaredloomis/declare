generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id         Int          @id @default(autoincrement())
  name       String
  created_at DateTime     @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  collection collection[]
  suite      suite[]
  test       test[]
  user_info  user_info[]
}

model collection {
  id                                         Int       @id @default(autoincrement())
  account_id                                 Int
  name                                       String
  created_at                                 DateTime  @default(now()) @db.Timestamp(6)
  created_by                                 Int
  updated_at                                 DateTime  @default(now()) @db.Timestamp(6)
  updated_by                                 Int
  account                                    account   @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_collection_created_byTouser_info user_info @relation("collection_created_byTouser_info", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_collection_updated_byTouser_info user_info @relation("collection_updated_byTouser_info", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  test                                       test[]
}

model report {
  id                                     Int       @id @default(autoincrement())
  test_id                                Int
  status                                 String
  duration                               Int
  start_time                             DateTime  @db.Timestamp(6)
  end_time                               DateTime  @db.Timestamp(6)
  step_results                           Json
  created_at                             DateTime  @default(now()) @db.Timestamp(6)
  created_by                             Int
  updated_at                             DateTime  @default(now()) @db.Timestamp(6)
  updated_by                             Int
  user_info_report_created_byTouser_info user_info @relation("report_created_byTouser_info", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  test                                   test      @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_report_updated_byTouser_info user_info @relation("report_updated_byTouser_info", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model suite {
  id                                    Int          @id @default(autoincrement())
  account_id                            Int
  name                                  String
  created_at                            DateTime     @default(now()) @db.Timestamp(6)
  created_by                            Int
  updated_at                            DateTime     @default(now()) @db.Timestamp(6)
  updated_by                            Int
  account                               account      @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_suite_created_byTouser_info user_info    @relation("suite_created_byTouser_info", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_suite_updated_byTouser_info user_info    @relation("suite_updated_byTouser_info", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  suite_test                            suite_test[]
}

model suite_test {
  suite_id Int
  test_id  Int
  suite    suite @relation(fields: [suite_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  test     test  @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([suite_id, test_id])
}

model test {
  id                                   Int          @id @default(autoincrement())
  account_id                           Int
  collection_id                        Int
  name                                 String
  steps                                Json
  created_at                           DateTime     @default(now()) @db.Timestamp(6)
  created_by                           Int
  updated_at                           DateTime     @default(now()) @db.Timestamp(6)
  updated_by                           Int
  report                               report[]
  suite_test                           suite_test[]
  account                              account      @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  collection                           collection   @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_test_created_byTouser_info user_info    @relation("test_created_byTouser_info", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_info_test_updated_byTouser_info user_info    @relation("test_updated_byTouser_info", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_info {
  id                                          Int          @id @default(autoincrement())
  account_id                                  Int
  email                                       String
  password                                    String
  is_admin                                    Boolean      @default(false)
  created_at                                  DateTime     @default(now()) @db.Timestamp(6)
  updated_at                                  DateTime     @default(now()) @db.Timestamp(6)
  collection_collection_created_byTouser_info collection[] @relation("collection_created_byTouser_info")
  collection_collection_updated_byTouser_info collection[] @relation("collection_updated_byTouser_info")
  report_report_created_byTouser_info         report[]     @relation("report_created_byTouser_info")
  report_report_updated_byTouser_info         report[]     @relation("report_updated_byTouser_info")
  suite_suite_created_byTouser_info           suite[]      @relation("suite_created_byTouser_info")
  suite_suite_updated_byTouser_info           suite[]      @relation("suite_updated_byTouser_info")
  test_test_created_byTouser_info             test[]       @relation("test_created_byTouser_info")
  test_test_updated_byTouser_info             test[]       @relation("test_updated_byTouser_info")
  account                                     account      @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
