import mongoose    from "mongoose"
import {
    GraphQLObjectType, GraphQLList, GraphQLString,
    GraphQLID, GraphQLNonNull, GraphQLSchema
} from "graphql"
import GraphQLJSON from "graphql-type-json"
import createType  from "mongoose-schema-to-graphql"

const ObjectId = mongoose.Schema.Types.ObjectId

const reportSchema = mongoose.Schema({
    pageID: {
        type: ObjectId,
        ref: "Page",
        required: true,
        index: true
    },
    packID: {
        type: ObjectId,
        ref: "TestPack",
        required: true
    },
    name: {
        type: String,
        required: true
    },
    startTime: {
        type: Date,
        required: true
    },
    summary: {
        type: Object
    },
    steps: {
        type: [{
            status: {
                type: String
            },
            message: {
                type: String
            },
            time: {
                type: Date
            },
            data: {
                type: Object
            },
            children: {
                type: Object
            }
        }]
    }
})

reportSchema.statics.graphQL = createType({
    name: "Report",
    description: "A report generated by running a TestPack",
    class: "GraphQLObjectType",
    schema: reportSchema,
    extend: {
        summary: {type: GraphQLJSON},
        steps: {type: new GraphQLList(new GraphQLObjectType({
            name: "Step",
            fields: {
                status:   {type: GraphQLString},
                message:  {type: GraphQLString},
                time:     {type: GraphQLString},
                data:     {type: GraphQLJSON},
                children: {type: GraphQLJSON}
            }
        }))}
    }
})

const stepSchema = {
    status: {
        type: String
    },
    message: {
        type: String
    },
    time: {
        type: Date
    },
    data: {
        type: Object
    }
}

module.exports = mongoose.model("Report", reportSchema)
